// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.seforge.paas.monitor.domain;

import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.seforge.paas.monitor.domain.App;
import org.seforge.paas.monitor.domain.AppDataOnDemand;
import org.seforge.paas.monitor.domain.AppInstanceDataOnDemand;
import org.seforge.paas.monitor.domain.AppServer;
import org.seforge.paas.monitor.domain.AppServerDataOnDemand;
import org.seforge.paas.monitor.domain.JmxAppInstance;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect AppInstanceDataOnDemand_Roo_DataOnDemand {
    
    declare @type: AppInstanceDataOnDemand: @Component;
    
    private Random AppInstanceDataOnDemand.rnd = new SecureRandom();
    
    private List<JmxAppInstance> AppInstanceDataOnDemand.data;
    
    @Autowired
    private AppDataOnDemand AppInstanceDataOnDemand.appDataOnDemand;
    
    @Autowired
    private AppServerDataOnDemand AppInstanceDataOnDemand.appServerDataOnDemand;
    
    public JmxAppInstance AppInstanceDataOnDemand.getNewTransientJmxAppInstance(int index) {
        JmxAppInstance obj = new JmxAppInstance();
        setApp(obj, index);
        setAppServer(obj, index);
        setDescription(obj, index);
        setErrorCount(obj, index);
        setErrorLogDir(obj, index);
        setLocation(obj, index);
        setName(obj, index);
        setObjectName(obj, index);
        setStatus(obj, index);
        return obj;
    }
    
    public void AppInstanceDataOnDemand.setApp(JmxAppInstance obj, int index) {
        App app = appDataOnDemand.getRandomApp();
        obj.setApp(app);
    }
    
    public void AppInstanceDataOnDemand.setAppServer(JmxAppInstance obj, int index) {
        AppServer appServer = appServerDataOnDemand.getRandomAppServer();
        obj.setAppServer(appServer);
    }
    
    public void AppInstanceDataOnDemand.setDescription(JmxAppInstance obj, int index) {
        String description = "description_" + index;
        obj.setDescription(description);
    }
    
    public void AppInstanceDataOnDemand.setErrorCount(JmxAppInstance obj, int index) {
        int errorCount = index;
        obj.setErrorCount(errorCount);
    }
    
    public void AppInstanceDataOnDemand.setErrorLogDir(JmxAppInstance obj, int index) {
        String errorLogDir = "errorLogDir_" + index;
        obj.setErrorLogDir(errorLogDir);
    }
    
    public void AppInstanceDataOnDemand.setLocation(JmxAppInstance obj, int index) {
        String location = "location_" + index;
        obj.setLocation(location);
    }
    
    public void AppInstanceDataOnDemand.setName(JmxAppInstance obj, int index) {
        String name = "name_" + index;
        obj.setName(name);
    }
    
    public void AppInstanceDataOnDemand.setObjectName(JmxAppInstance obj, int index) {
        String objectName = "objectName_" + index;
        obj.setObjectName(objectName);
    }
    
    public void AppInstanceDataOnDemand.setStatus(JmxAppInstance obj, int index) {
        String status = "status_" + index;
        obj.setStatus(status);
    }
    
    public JmxAppInstance AppInstanceDataOnDemand.getSpecificJmxAppInstance(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        JmxAppInstance obj = data.get(index);
        Long id = obj.getId();
        return JmxAppInstance.findJmxAppInstance(id);
    }
    
    public JmxAppInstance AppInstanceDataOnDemand.getRandomJmxAppInstance() {
        init();
        JmxAppInstance obj = data.get(rnd.nextInt(data.size()));
        Long id = obj.getId();
        return JmxAppInstance.findJmxAppInstance(id);
    }
    
    public boolean AppInstanceDataOnDemand.modifyJmxAppInstance(JmxAppInstance obj) {
        return false;
    }
    
    public void AppInstanceDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = JmxAppInstance.findJmxAppInstanceEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'JmxAppInstance' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<JmxAppInstance>();
        for (int i = 0; i < 10; i++) {
            JmxAppInstance obj = getNewTransientJmxAppInstance(i);
            try {
                obj.persist();
            } catch (ConstraintViolationException e) {
                StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getConstraintDescriptor()).append(":").append(cv.getMessage()).append("=").append(cv.getInvalidValue()).append("]");
                }
                throw new RuntimeException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}

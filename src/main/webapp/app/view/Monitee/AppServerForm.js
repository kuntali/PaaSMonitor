/*
 * File: app/view/Monitee/AppServerForm.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('PaaSMonitor.view.Monitee.AppServerForm', {
    extend: 'Ext.form.Panel',
    alias: 'widget.moniteeappserverform',

    bodyPadding: 10,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'combobox',
                    name: 'type',
                    fieldLabel: 'Type',
                    displayField: 'name',
                    queryMode: 'local',
                    store: 'AppServerTypeStore',
                    valueField: 'id',
                    anchor: '100%',
                    listeners: {
                        select: {
                            fn: me.onComboboxSelect,
                            scope: me
                        }
                    }
                },
                {
                    xtype: 'textfield',
                    name: 'ip',
                    value: '192.168.4.243',
                    fieldLabel: 'IP',
                    anchor: '100%'
                },
                {
                    xtype: 'textfield',
                    name: 'httpPort',
                    fieldLabel: 'HTTP Port',
                    anchor: '100%'
                },
                {
                    xtype: 'textfield',
                    hidden: true,
                    id: 'jmxPort',
                    name: 'jmxPort',
                    fieldLabel: 'JMX Port',
                    anchor: '100%'
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    ui: 'footer',
                    dock: 'bottom',
                    items: [
                        {
                            xtype: 'tbfill'
                        },
                        {
                            xtype: 'button',
                            handler: function(button, event) {
                                this.up('form').getForm().reset();
                            },
                            text: 'Reset'
                        },
                        {
                            xtype: 'button',
                            disabled: true,
                            id: 'save_appserver_button',
                            text: 'Submit',
                            formBind: true
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onComboboxSelect: function(combo, records, options) {
        var selected = records[0].data.id;
        var form = combo.up('form');
        var jmxField = form.getComponent('jmxPort');
        if(selected == 'tomcat' || selected == 'jetty') {    
            jmxField.show();
        }else{
            jmxField.hide();
        }
    }

});
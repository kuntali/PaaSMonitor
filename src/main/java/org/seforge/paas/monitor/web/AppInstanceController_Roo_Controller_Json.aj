// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.seforge.paas.monitor.web;

import org.seforge.paas.monitor.domain.JmxAppInstance;
import org.seforge.paas.monitor.domain.JmxAppServer;
import org.seforge.paas.monitor.web.AppInstanceController;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

privileged aspect AppInstanceController_Roo_Controller_Json {
    
    @RequestMapping(value = "/{id}", headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> AppInstanceController.showJson(@PathVariable("id") Long id) {
        JmxAppInstance jmxAppInstance = JmxAppInstance.findJmxAppInstance(id);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        if (jmxAppInstance == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(jmxAppInstance.toJson(), headers, HttpStatus.OK);
    }
    
    @RequestMapping(value = "/jsonArray", method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> AppInstanceController.createFromJsonArray(@RequestBody String json) {
        for (JmxAppInstance jmxAppInstance: JmxAppInstance.fromJsonArrayToJmxAppInstances(json)) {
            jmxAppInstance.persist();
        }
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/jsonArray", method = RequestMethod.PUT, headers = "Accept=application/json")
    public ResponseEntity<String> AppInstanceController.updateFromJsonArray(@RequestBody String json) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        for (JmxAppInstance jmxAppInstance: JmxAppInstance.fromJsonArrayToJmxAppInstances(json)) {
            if (jmxAppInstance.merge() == null) {
                return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
            }
        }
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
    @RequestMapping(params = "find=ByJmxAppServer", headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> AppInstanceController.jsonFindJmxAppInstancesByJmxAppServer(@RequestParam("jmxAppServer") JmxAppServer jmxAppServer) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        return new ResponseEntity<String>(JmxAppInstance.toJsonArray(JmxAppInstance.findJmxAppInstancesByJmxAppServer(jmxAppServer).getResultList()), headers, HttpStatus.OK);
    }
    
}
